/*
 * The plugin comes with defaults that are useful to myself. You should configure it to behave as you please:
 */
publishOnCentral {
    repoOwner.set("raynigon")
    projectDescription.set("A reasonable description")
    // The following values are the default, if they are ok with you, just omit them
    projectLongName.set(project.name)
    licenseName.set("Apache License, Version 2.0")
    licenseUrl.set("http://www.apache.org/licenses/LICENSE-2.0")
    projectUrl.set("https://github.com/${repoOwner.get()}/spring-boot")
    scmConnection.set("scm:git:https://github.com/${repoOwner.get()}spring-boot")
}

/*
 * Developers and contributors must be added manually
 */
publishing {
    publications {
        withType(MavenPublication.class) {
            pom {
                developers {
                    developer {
                        name = "Simon Schneider"
                        email = "opensource@raynigon.de"
                        url = "https://www.raynigon.com/"
                    }
                }
            }
        }
    }
}

/*
 * The plugin automatically adds every publication to the list of objects to sign
 * The configuration of the signing process is left to the user, though,
 * as in a normal Gradle build.
 * In the following example, in-memory signing is configured.
 * For further options, please refer to: https://docs.gradle.org/current/userguide/signing_plugin.html
 */
signing {
    required {
        findProperty("signingKey") != null
    }
    String signingKey = findProperty("signingKey")
    String signingPassword = findProperty("signingPassword")
    useInMemoryPgpKeys(signingKey, signingPassword)
}